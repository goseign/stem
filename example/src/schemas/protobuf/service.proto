syntax = "proto3";

package ledger.communication.grpc;

import "commons.proto";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
    flat_package: true
    lenses: true
    retain_source_code_info: false
    no_default_values_in_constructor: false
    preserve_unknown_fields: false
};


// The ledger service definition.
service Ledger {
    //rpc Lock (LockRequest) returns (LockReply) {}
    rpc Create (CreateRequest) returns (CreateReply) {}
    rpc Authorize (AuthorizeRequest) returns (AuthorizeReply) {}
}

// The request message containing the user's name.
message CreateRequest {
    string transactionId = 1 [(scalapb.field).type = "transactions.TransactionId"];
    string accountId = 2 [(scalapb.field).type = "accounts.AccountId"];
    stem.commons.BigDecimal amount = 3 [(scalapb.field).no_box = true];
}

// The response message containing the greetings
message CreateReply {
    string message = 1;
}

// The request message containing the user's name.
message AuthorizeRequest {
    string transactionId = 1 [(scalapb.field).type = "transactions.TransactionId"];
}

// The response message containing the greetings
message AuthorizeReply {
    string message = 1;
}